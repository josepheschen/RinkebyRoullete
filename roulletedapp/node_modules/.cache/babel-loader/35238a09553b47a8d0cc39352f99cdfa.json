{"ast":null,"code":"var _jsxFileName = \"/Users/josepheschen/Desktop/RinkebyRoullete/roulletedapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport initBlockchain from \"./utils/initBlockchain\";\nimport getZombieCount from \"./utils/getZombieCount\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport { Provider } from \"react-redux\";\nimport TopBar from \"./components/TopBar\";\nimport Greeting from \"./pages/Greeting\";\nimport MyZombieInventory from \"./pages/MyZombieInventory\";\nimport ZombieInventory from \"./pages/ZombieInventory\";\nimport AttackZombie from \"./pages/AttackZombie\";\nimport FeedOnKitty from \"./pages/FeedOnKitty\";\nimport ChangeName from \"./pages/ChangeName\";\nimport LevelUp from \"./pages/LevelUp\";\nimport TransferZombie from \"./pages/TransferZombie\";\nimport store from \"./redux/store\"; //\n//  This is the main application page; routing is handled to render other pages in the application\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      try {\n        const web3 = await getWeb3(); // from utils directory;  connect to metamask\n\n        const data = await initBlockchain(web3); // get contract instance and user address\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.log(error);\n      }\n    };\n  }\n\n  // **************************************************************************\n  //\n  // main render routine for App component;\n  //      contains route info to navigate between pages\n  //\n  // **************************************************************************\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Greeting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josepheschen/Desktop/RinkebyRoullete/roulletedapp/src/App.js"],"names":["React","Component","getWeb3","initBlockchain","getZombieCount","HashRouter","Route","Container","Provider","TopBar","Greeting","MyZombieInventory","ZombieInventory","AttackZombie","FeedOnKitty","ChangeName","LevelUp","TransferZombie","store","App","componentDidMount","web3","data","error","alert","console","log","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAOC,KAAP,MAAkB,eAAlB,C,CAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAW1BmB,iBAX0B,GAWN,YAAY;AAC9B,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMnB,OAAO,EAA1B,CADE,CAC4B;;AAC9B,cAAMoB,IAAI,GAAG,MAAMnB,cAAc,CAACkB,IAAD,CAAjC,CAFE,CAEwC;AAC3C,OAHD,CAGE,OAAOE,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,KAvByB;AAAA;;AAyB1B;AACA;AACA;AACA;AACA;AACA;AAEAI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKU,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAElB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF,CADF;AAYD;;AA7CyB;;AAgD5B,eAAeS,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport getWeb3 from \"./utils/getWeb3\";\r\nimport initBlockchain from \"./utils/initBlockchain\";\r\nimport getZombieCount from \"./utils/getZombieCount\";\r\n\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport TopBar from \"./components/TopBar\";\r\n\r\nimport Greeting from \"./pages/Greeting\";\r\nimport MyZombieInventory from \"./pages/MyZombieInventory\";\r\nimport ZombieInventory from \"./pages/ZombieInventory\";\r\nimport AttackZombie from \"./pages/AttackZombie\";\r\nimport FeedOnKitty from \"./pages/FeedOnKitty\";\r\nimport ChangeName from \"./pages/ChangeName\";\r\nimport LevelUp from \"./pages/LevelUp\";\r\nimport TransferZombie from \"./pages/TransferZombie\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\n//\r\n//  This is the main application page; routing is handled to render other pages in the application\r\n\r\nclass App extends Component {\r\n  // define a state variable for important connectivity data to the blockchain\r\n  // this will then be put into the REDUX store for retrieval by other pages\r\n\r\n\r\n  // **************************************************************************\r\n  //\r\n  // React will call this routine only once when App page loads; do initialization here\r\n  //\r\n  // **************************************************************************\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const web3 = await getWeb3(); // from utils directory;  connect to metamask\r\n      const data = await initBlockchain(web3);  // get contract instance and user address\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`\r\n      );\r\n\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // **************************************************************************\r\n  //\r\n  // main render routine for App component;\r\n  //      contains route info to navigate between pages\r\n  //\r\n  // **************************************************************************\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <HashRouter>\r\n          <Container>\r\n            <TopBar state={this.state} />\r\n            <div>\r\n              <Route exact path=\"/\" component={Greeting} />\r\n            </div>\r\n          </Container>\r\n        </HashRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}